You are tasked with a problem of creating a deep convolutional network classification EXPLANATION. You will be given an python object in form of `chosen class, [{'neuron description' : *neuron description*, 'neuron positions' : *neuron positions*, neuron id' : *neuron id *}, {'neuron description' : *neuron description*, 'neuron positions' : *neuron positions*, 'neuron id' : *neuron id *}, …]` where `...` means that there might be numerous triplets more, and  which is a class that model has picked. I want you to do FOUR things:
1. Create a grammatically correct sentence which will explain the model's decision.
2. Decide which neuron descriptions do not fit with `chosen class` and do not include those neuron descriptions in the final explanation. What I mean by 'do not fit' is that they are completely unrelated with chosen class (like 'dentist' and 'animal heads'). Do include in final explanation neuron descriptions which aren't directly related to chosen class, but they may be indirectly correlated with the chosen class, especially in terms of SHAPE, COLOR, or TEXTURE resemblance (like 'fountain' and 'sea' because water connects the two, or 'cathedral' and 'flower' because they are similar in shape, or 'brick wall' and 'grid' because the texture is similar). You should also include neurons and their descriptions if they theoretically are not directly connected with the model's decision, but they can be somehow connected with the decision (for example: decision: 'living room', description: 'sun' might be ok to include because the room could be lit with artificial lighting, and the model could confuse it with the sun. Another example is decision: 'house', description: 'trees' because the house could be made of wood, which comes from trees). Answer only with the final explanation and do not generate any text unnecessary for fulfilling your task (just like in exemplary OUTPUT). If 'positions' field is empty, ignore it and do not mention positions in the output. 
3. Prioritize the readability of the explanation. Include only essential neuron descriptions so that the explanation is concise, even if it means omitting some neuron descriptions. You can decide which neuron descriptions are the most important based on the severity of their relations with chosen class. You can also aggregate information to shorten the explanation, for example you can merge neuron descriptions like "ocean", "river", "lake" into "various bodies of water", or you can merge "horizontal lines" and "horizontal stripes" into "horizontal patterns", or you can merge "birds", "dogs", and "horses" into "animals". If you merge some neuron descriptions and their joint positions become ambiguous, you can omit those positions. Keep the explanation grammatically simple to understand. Construct explanation which will be easily comprehensible even for an uneducated individual.  
4. If the positions list is too long or too ambiguous, for example ['left-bottom corner', 'right-top corner'], do not include the positions of neuron description in the explanation. If the positions can be aggregated, for example ['bottom-left corner', 'bottom', 'bottom-right corner'] into 'bottom', do aggregate those positions. Your goal is to include positions only if they can be easily interpreted and traced on the image.
Here is an example – after 'PROMPT:' is your input, and after 'OUTPUT:' is an exemplary explanation. Read the prompt after first example, and provide me with an output:
PROMPT: “lakeside, [{'description': 'Nature', 'positions': ['left', 'right', 'bottom'], 'id': 99}, {'description': 'The sky', 'positions': ['top-right corner', 'bottom-left corner', 'bottom'], 'id': 162}, {'description': 'Red and white colored objects', 'positions': ['left', 'right', 'bottom'], 'id': 250}, {'description': 'The ocean', 'positions': ['left', 'right', 'bottom'], 'id': 57}, {'description': 'Animal heads', 'positions': [], 'id': 164}, {'description': 'The color red', 'positions': ['left', 'right', 'bottom'], 'id': 220}, {'description': 'White backgrounds', 'positions': ['bottom', 'left'], 'id': 158}, {'description': 'Grass', 'positions': ['left', 'bottom-left corner', 'bottom', 'bottom-right corner'], 'id': 3}, {'description': 'Dogs and guinea pig', 'positions': ['center'], 'id': 125}, {'description': 'The color green', 'positions': ['top-right corner', 'right', 'bottom-right corner'], 'id': 83}]”
OUTPUT: “The model assigned this image to the "lakeside" class because in the last layer it discovered 'Nature' at the 'left', 'right' and 'bottom', 'The sky', 'Red and white colored objects' at the 'left', 'right', and 'bottom', 'The ocean' at the 'left', 'right', and 'bottom', 'Grass' at the 'left', 'bottom-left corner', 'bottom', 'bottom-right corner' and 'The color green' at the 'right' of the image.”
In this example explanation neuron descriptions "Read and white colored objects” and “The color red” were merged because they represent the same visual features. In this example explanation neuron descriptions “Animal heads”, “White backgrounds”, and “Dogs and guinea pig” were omitted because they are not essential for “lakeside” class detection. In this example explanation ['top-right corner', 'bottom-left corner', 'bottom'] positions were omitted because they are too ambiguous and span through the whole image. In this example explanation ['top-right corner', 'right', 'bottom-right corner'] were merged into 'right' position.
