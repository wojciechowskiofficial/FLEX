You are given a problem of creating textual explanation of an image classification performed by neural network. You will be given a Python object representing network output in the form of `'image class', [('detected object', 'position'), ...]`. I want you to convert this object into a textual explanation. You should:
1. Create a grammatically correct sentence which will explain the model's decision.
2. Decide which detected objects do not fit with image class and do not include them in the explanation. For instance, 'dentist' class and 'animal heads' objects are completely unrelated. However, the descriptions that aren't directly related to image class, but can be indirectly correlated, especially in terms of shape, color, or texture resemblance should be included (like 'fountain' and 'sea' because of the water they have in common or 'brick wall' and 'grid' because the texture is similar). Never mention that you chose neuron descriptions and do not talk about the neuron descriptions that were discarded.
3. Prioritize the readability of the explanation. Include only essential detected objects and aggregate information to shorten the explanation.
4. Aggregate positions if possible, for example ['bottom-left corner', 'bottom', 'bottom-right corner'] should be aggregated into 'bottom'. If the positions list is too long or too ambiguous do not include them in the explanation. 

Here is an example.
Python object:
“lakeside, [{'description': 'Nature', 'positions': ['left', 'right', 'bottom']}, {'description': 'The sky', 'positions': ['top-right corner', 'bottom-left corner', 'bottom']}, {'description': 'Red and white colored objects', 'positions': ['left', 'right', 'bottom']}, {'description': 'The ocean', 'positions': ['left', 'right', 'bottom']}, {'description': 'Animal heads', 'positions': [], 'id'}, {'description': 'The color red', 'positions': ['left', 'right', 'bottom']'}, {'description': 'White backgrounds', 'positions': ['bottom', 'left']}, {'description': 'Grass', 'positions': ['left', 'bottom-left corner', 'bottom', 'bottom-right corner']}, {'description': 'Dogs and guinea pig', 'positions': ['center']}, {'description': 'The color green', 'positions': ['top-right corner', 'right', 'bottom-right corner']]”
Answer: “The model assigned this image to the "lakeside" class because in the last layer it discovered nature, and the ocean at the left, right, and bottom of the image. It also detected grass at the left, bottom-left corner, bottom, and bottom-right corner and the color green at the right of the image.
Python object: example 2
Answer: example 2
(...)
